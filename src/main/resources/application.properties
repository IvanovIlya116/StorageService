spring.application.name=StorageService
server.port=8083

#spring.datasource.url=jdbc:postgresql://localhost:5432/microservices
spring.datasource.url=jdbc:postgresql://postgres-service:5432/microservices
spring.datasource.username=postgres
spring.datasource.password=postgres
spring.datasource.driver-class-name=org.postgresql.Driver

spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true
spring.jpa.properties.hibernate.format_sql=true

spring.security.oauth2.resourceserver.jwt.issuer-uri=http://oauth2-service:8085/realms/government-data
spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://oauth2-service:8085/realms/government-data/protocol/openid-connect/certs

spring.kafka.bootstrap-servers=kafka:9092
spring.kafka.consumer.group-id=storage-group
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.apache.kafka.common.serialization.StringDeserializer

# Включить все actuator endpoints, включая Prometheus
management.endpoints.web.exposure.include=*

# Вынос метрик на отдельный порт (по желанию)
management.server.port=8081

logging.file.name=/shared-logs/storage-service.log
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %logger{36} - %msg%n

spring.cache.type=redis
spring.data.redis.host=redis
spring.data.redis.port=6379